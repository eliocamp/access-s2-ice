---
title: "Untitled"
format: revealjs
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(ggplot2)
library(data.table)
library(metR)
library(rcdo)
cdo_options_set("-L")
source(here::here("scripts/setup/functions.R"))
```

```{r}
theme_set(theme_minimal() +
            theme(panel.background = element_rect(fill = "#fafafa", color = NA),
                  legend.position = "bottom",
                  legend.title.position = "top", 
                  legend.title = element_text(hjust = 0.5),
                  legend.frame = element_rect(color = "black", linewidth = 0.4),
                  legend.key.height = unit(0.75, "lines")
            ))
wide_legend <- theme(legend.key.width = unit(1, 'null'))
```
```{r}
get <- `$`

sic_projection <- globals$nsidc_climatology_monthly |>  
  ncdf4::nc_open() |>  
  ncdf4::ncatt_get(varid = "crs") |> 
  get("proj_params")

topo <- cdo_topo(grid = globals$nsidc_grid, 
                 ofile = file.path(globals$data_derived, "topo.nc")) |> 
    cdo_execute(options = c("-f nc")) |> 
    ReadNetCDF(c(z = "topo")) |> 
    _[, .(x = xgrid, y = ygrid, z)]

contour <- StatContour$compute_group(topo, breaks = 0)
geom_antarctica_path <- geom_path(data = contour, aes(x, y, group = group), inherit.aes = FALSE, colour = "black")

geom_antarctica_fill <- geom_polygon(data = contour, aes(x, y, group = group), inherit.aes = FALSE, colour = "black", fill ="#FAFAFA")

geomcoord_antarctica <- list(NULL
    , coord_sf(crs = sic_projection, lims_method = "box")
    , scale_x_continuous(name = NULL, expand = c(0, 0))
    , scale_y_continuous(name = NULL, expand = c(0, 0))
    , geom_antarctica_path
)

scale_color_models <- scale_color_manual(NULL, 
                     values = c(access = "black", 
                                hadisst = "#3584e4", 
                                nsidc = "#e66100"),
                     labels = c(access = "ACCESS-S2",
                                hadisst = "HadISST",
                                nsidc = "NSIDC CDRV4"))

```

```{r}
climatology <- merge(
    globals$nsidc_climatology_monthly |> 
        ReadNetCDF(c(nsidc = "aice")) |> 
        _[, time := as.Date(time)],

    globals$access_renalysis_climatology_monthly |> 
        ReadNetCDF(c(access = "aice")) |> 
        _[, time := as.Date(time)]
)
    
climatology |> 
    ggplot(aes(xgrid, ygrid)) +
    geom_contour_fill(aes(z = access - nsidc, fill = after_stat(level)), 
                      breaks = anchor_limits(binwidth = 0.1, exclude = 0, range = c(-0.5, 0.5))) +
    scale_fill_divergent_discretised("ACCESS-S2 bias") +
    geomcoord_antarctica +
    geom_antarctica_fill +
    facet_wrap(~ lubridate::month(time, label = TRUE)) +
    wide_legend
```


```{r}
access_sst_clim <- globals$access_sst |> 
    cdo_ymonmean() |> 
    cdo_setyear(2000) |> 
    cdo_execute()

grid <- access_sst_clim |> 
    ReadNetCDF(c(lon = "nav_lon", lat = "nav_lat"))

era5_sst_clim <- globals$era5_sst |> 
    cdo_ymonmean() |> 
    cdo_setyear(2000) |> 
    cdo_execute()

sst <- merge(
    access_sst_clim |> 
        ReadNetCDF(c(access = "sst")) |> 
        setnames("time_counter", "time") |> 
        _[, time := as.Date(time)] |> 
        _[, deptht := NULL],
    era5_sst_clim |> 
        ReadNetCDF(c(era5 = "sst")) |> 
        _[, time := as.Date(time)] |> 
        _[, era5 := era5 - 273.15]
)

sst <- merge(grid, sst)
```

```{r}
sst |> 
    copy() |> 
    _[abs(access - era5) > 5, era5 := NA] |> 
    ggplot(aes(lon, lat)) +
    geom_contour_fill(aes(z = access - era5), 
        proj = sic_projection, proj.latlon = FALSE) +
    scale_fill_divergent() +
    geomcoord_antarctica +
    geom_antarctica_fill +
    facet_wrap(~month(time))
```
```{r}
extent <- merge(
    ReadNetCDF(globals$nsidc_extent_monthly, vars = c(nsidc = "aice")) |> 
        _[, let(lon = NULL, lat = NULL, time = as.Date(time))] |> 
        _[, tidyr::complete(.SD, time = seq(min(time),
                                        max(time),
                                        "1 month"))],
    ReadNetCDF(globals$access_extent_monthly, vars = c(access = "aice")) |> 
        _[, let(lon = NULL, lat = NULL, time = as.Date(time))] |> 
        _[, tidyr::complete(.SD, time = seq(min(time),
                                        max(time),
                                        "1 month"))]
)  |> 
    as.data.table()

extent |> 
    melt(id.vars = "time") |>
    _[value == 0, value := NA]  |> 
    _[, value := Anomaly(value, year(time) %between% c(1981, 2011), na.rm = TRUE), 
        by = .(month(time), variable)] |> 
    ggplot(aes(time, value)) +
    geom_line(aes(color = variable)) +
    geom_smooth(aes(color = variable), method = "lm",
              formula = y ~ x +
                I(pmax(x - as.numeric(as.Date("2005-12-01")), 0)) +
                I(pmax(x - as.numeric(as.Date("2012-12-01")), 0)),
              n = 100
    ) +
    scale_y_continuous("Extent/area (million km²)",
                     labels = scales::label_number(scale = 1e-12)) +
    scale_x_date(NULL, expand = c(0, 0)) +
    scale_color_models
```


```{r}
extent |> 
    melt(id.vars = "time") |>
    _[value == 0, value := NA]  |> 
    _[, value := Anomaly(value, year(time) %between% c(1981, 2011), na.rm = TRUE), 
        by = .(month(time), variable)] |> 
    dcast(time ~ variable, value.var = "value") |> 
    ggplot(aes(nsidc, access)) +
  geom_point(size = 0.4) +
  geom_smooth() +
  geom_abline() +
  scale_x_continuous("NSIDC extent (million km²)",
                     labels = scales::label_number(scale = 1e-12)) +
  scale_y_continuous("ACCESS extent (million km²)",
                     labels = scales::label_number(scale = 1e-12)) +
    # coord_equal() +
    # facet_wrap(~lubridate::month(time, label = TRUE)) 
    NULL
```


```{r}
extent |> 
    melt(id.vars = "time") |>
    _[value == 0, value := NA]  |> 
    _[, value := Anomaly(value, year(time) %between% c(1981, 2011), na.rm = TRUE), 
        by = .(month(time), variable)]  |> 
    ggplot(aes(lubridate::month(time, label = TRUE), value)) +
    geom_boxplot()
```




```{r}
geom_cross <- function() {
  list(geom_hline(yintercept = 0), 
       geom_vline(xintercept = 0))
}
```


```{r}
rmse <- readRDS(file.path(globals$data_derived, "rmse.Rds")) |> 
    _[type != "climatology"]
# iiee <- readRDS(file.path(globals$data_derived, "iiee.Rds")) |> 
#     _[type != "persistence"]

# errors <- rbind(rmse) 
```

```{r}
nsidc_mean_extent <- globals$nsidc_extent_daily |> 
    ReadNetCDF("aice") |> 
    _[, .(mean_extent = mean(aice)), by = yday(time)]
```


```{r}
missing_daily <- globals$nsidc_area_daily |> 
    ReadNetCDF() |> 
    _[is.na(aice) | aice < 1e6, .(time)]

rmse |> 
    _[time %in% missing_daily$time, value := NA] |> 
    _[value < 0.01, value := NA] |> 
    _[value > 3e13, value := NA] |> 
    _[, time := as.Date(time)] |> 
    _[, lag := as.numeric(time - time_forecast)]
```


```{r}
rmse |> 
    ggplot(aes(lag, value)) +

    geom_line(aes(color = type, 
                  group = interaction(type, member, time_forecast),
                  alpha = type))  +
    scale_alpha_manual(values = c(persistence = 0.1,
                                  forecast = 0.01)) +
    geom_ribbon(data = \(x) x[, .(sd = sd(value, na.rm = TRUE),
                                  mean = mean(value, na.rm = TRUE)), 
                                by = .(lag, type,measure)], 
                aes(y = mean, 
                    ymin = mean - sd*2, 
                    ymax = mean + sd*2, 
                    color = type, 
                    fill = type), alpha = 0.1) +
    geom_line(data = \(x) x[, .(mean = mean(value, na.rm = TRUE)), 
                                by = .(lag, type, measure)],
             aes(y = mean, color = type), linewidth = 1) +
    facet_wrap(~ measure, scales = "free_y")

    
```


```{r}
mean_rmse <- rmse[, .(sd = sd(value, na.rm = TRUE),
                      mean = median(value, na.rm = TRUE),
                      n = .N), 
                  by = .(lag, type,measure, month(time_forecast))]
```

```{r}
mean_rmse |> 
    ggplot(aes(lag, mean)) +
    geom_ribbon(aes(ymin = mean - sd*2, ymax = mean + sd*2, 
                    color = type, fill = type), alpha = 0.1) +
    geom_line(aes(color = type)) +
    facet_wrap(~ month)
```


```{r}
important_lags <- seq(2, 279, by = 31)
rmse |>
    copy() |> 
    _[type == "forecast"] |> 
    _[, initial := value[lag == 1], by = .(time_forecast, member)] |> 
    _[lag != 1] |> 
    _[lag %in% important_lags] |> 
    ggplot(aes(initial, value)) +
    geom_point() +
    geom_smooth(method = "lm", fullrange = TRUE) +
    expand_limits(x = 0) +
    facet_wrap(~ lag)
```

```{r}
rmse |>
    copy() |> 
    _[type == "forecast"] |> 
    _[, initial := value[lag == 1], by = .(time_forecast, member)] |> 
    _[lag != 1]  |> 
    _[, FitLm(value, initial, se = TRUE), by = .(month = lubridate::month(time_forecast, label = FALSE), lag)] |> 
    _[term == "(Intercept)"] |> 
    ggplot(aes(lag, month)) +
    geom_contour_fill(aes(z = r.squared)) 
```


```{r}
rmse |> 
    _[type == "forecast"] |> 
    _[, .(sd = sd(value, na.rm = TRUE)), by  = .(lag, time, time_forecast)] |> 
    _[, .(sd = mean(sd, na.rm = TRUE)), by = .(lag, month(time_forecast))] |> 
    ggplot(aes(lag, sd)) +
    geom_line() +
    facet_wrap(~month)
```
