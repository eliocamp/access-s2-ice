---
title: "ACCESS-S2 eval"
format: 
  revealjs:
    fig-width: 12
    fig-height: 6
execute: 
  cache: refresh
---

```{r setup, cache=FALSE}
library(metR)
library(ggplot2)
library(data.table)
library(patchwork)
library(rcdo)
theme_set(theme_minimal() + theme(legend.position = "bottom"))


set_day <- function(date) {
  lubridate::day(date) <- 01
  as.Date(date)
}
data <- here::here("data/data_derived")

months_difference <- function(x, y) {
  lubridate::interval(x, y) %/% months(1)
}

access_data <- "data/data_derived/access_subset.nc"
```


# Reanalysis

```{r read_data}

read_extent <- function(extent, area, name = "aice", range = NULL) {
  if (!is.null(range)) {
    range <- list(time = range)
  }
  extent <- ReadNetCDF(extent, vars = c(extent = name),
                       subset = range)
  
  area <- ReadNetCDF(area, vars = c(area = name),
                     subset = range)
  
  extent[area, on = .NATURAL] |>  
    _[, time := as.Date(time)] |> 
    _[, let(lat = NULL, lon = NULL)] |> 
    _[, tidyr::complete(.SD, time = seq(min(time),
                                        max(time),
                                        "1 month"))] |> 
    as.data.table() |> 
    melt(id.vars = c("time"))
}

access <- read_extent(file.path(data, "access_extent.nc"), 
                      file.path(data, "access_area.nc"))

range_access <- range(access$time)

hadisst <- read_extent(file.path(data, "hadisst_extent.nc"), 
                       file.path(data, "hadisst_area.nc"),
                       name = "sic",
                       range = range_access)


nsidc <- read_extent(file.path(data, "nsidc_extent.nc"), 
                     file.path(data, "nsidc_area.nc"),
                     name = "cdr_seaice_conc_monthly",
                     range = range_access)

```

```{r}
acfdf <- function(...) {
  raw <- acf(..., plot = FALSE)
  list(lag = raw[["lag"]][, 1,1],
       acf = raw[["acf"]][, 1, 1]
       )
}

rbind(access = access, hadisst = hadisst, idcol = "model") |>
  na.omit() |>
  _[variable == "extent"] |> 
  # _[year(time) < 2014] |>
  _[, value := Anomaly(value), 
    by = .(model, month(time), regime = year(time) > 2007)] |>
  # _[, value := resid(lm(value ~ poly(time, 5))), .(model)] |> 
  _[, acfdf(value, na.action = na.omit), by = .(regime = year(time) > 2007, model)] |>
  ggplot(aes(lag, acf)) +
  geom_line(aes(color = regime)) +
  expand_limits(y = 0) +
  facet_wrap(~model)
```

```{r}
hindcast_data <- "data/data_derived/hindcast_area/daily/"
area_daily <- list.files(hindcast_data, recursive = TRUE)

extract_info <- function(x) {
  utils::strcapture("di_aice_(\\d{8})_e(\\d{2}).nc", 
                    basename(x), 
                    proto = list(init_time = character(1), 
                                member = numeric(1)))
}
area_daily <- area_daily[dirname(area_daily) == "Antarctic"]

a <- lapply(area_daily, function(file) {
  # message(file)
  ReadNetCDF(file.path(hindcast_data, file), "aice")  |> 
    _[, file := file] |> 
    _[, let(lon = NULL, lat = NULL)][]
}) |> 
  rbindlist() |> 
  _[, region := dirname(file)] |> 
  _[, c("init_time", "member") := extract_info(file)] |> 
  _[, init_time := lubridate::as_datetime(init_time)] |> 
  _[, file := NULL]

```

```{r}
area_daily <- ReadNetCDF("data/data_derived/access_area_daily.nc", vars = "aice")  |> 
  _[, let(lon = NULL, lat = NULL)]


acfdf <- function(...) {
  raw <- acf(..., plot = FALSE)
  list(lag = raw[["lag"]][, 1,1],
       acf = raw[["acf"]][, 1, 1]
       )
}
```


```{r}
area_daily |> 
  _[year(time) < 2014] |>
  _[, aice := nafill(aice, type = "locf")] |> 
  _[, aice_a := Anomaly(aice), 
    by = .(yday(time))] |>
  # _[, value := resid(lm(value ~ poly(time, 5))), .(model)] |> 
  _[, acfdf(aice_a, lag.max = 360*2)] |>
  ggplot(aes(lag/30, acf)) +
  geom_line() +
  expand_limits(y = 0) 
```

```{r}

rbind(access = access, hadisst = hadisst, idcol = "model") |>
  na.omit() |>
  # _[year(time) < 2014] |>
  _[, value := Anomaly(value), 
    by = .(variable, model, month(time))] |>
  # _[, value := resid(lm(value ~ poly(time, 5))), .(model)] |> 
  _[, acfdf(value, na.action = na.omit), by = .(model, variable)] |>
  ggplot(aes(lag, acf)) +
  geom_line(aes(color = variable)) +
  expand_limits(y = 0) +
  facet_wrap(~model)
```


```{r}
a[init_time == unique(init_time)[[2]]] |>
  ggplot(aes(time, aice)) +
  geom_line(aes(group = member))
```
```{r}
a |> 
  copy() |> 
  _[, lag := (as.numeric(time) - as.numeric(init_time))/3600/24] |> 
  # _[lag == 30] |> 
  _[, aice_a := aice - mean(aice), by = .(time, init_time, region)] |> 

  _[, .(sd = sd(aice_a), 
        mean = mean(aice)), by = .(init_time, region, time, lag)] |> 
  # _[month(init_time) == 1] |> 
  _[lag <= 42] |> 
  ggplot(aes(lag, sd)) +
  geom_line(aes(group = interaction(init_time), alpha = 0.2)) +
  geom_smooth() +
  facet_wrap(~ month(init_time))
  
```

```{r}
a |> 
  copy() |> 
  _[, lag := (as.numeric(time) - as.numeric(init_time))/3600/24] |> 
  # _[lag == 30] |> 
  _[, aice_a := aice - mean(aice), by = .(time, init_time, region)] |> 

  _[, .(sd = sd(aice_a), 
        mean = mean(aice)), by = .(month(init_time), region, lag)] |> 
  # _[month(init_time) == 1] |> 
  _[lag <= 42] |> 
  ggplot(aes(lag, sd)) +
  geom_line(aes(alpha = 0.2)) +
  # geom_smooth() +
  facet_wrap(~ month)
  
```

```{r}
a |> 
  copy() |> 
  _[, lag := (as.numeric(time) - as.numeric(init_time))/3600/24] |> 
  _[, aice_a := aice - mean(aice), by = .(time, init_time, region)] |> 
  _[, .(sd = sd(aice_a), 
        mean = mean(aice)), by = .(init_time, region, time, lag)] |> 
  # _[month(init_time) == 1] |> 
  # _[lag <= 42] |> 
  ggplot(aes(lag, sd)) +
  # geom_line(aes(group = interaction(init_time), alpha = 0.2)) +
  geom_smooth(aes(color = factor(month(init_time)))) +
  facet_wrap(~ month(init_time))
```

```{r}
a |> 
  copy() |> 
  _[, lag := (as.numeric(time) - as.numeric(init_time))/3600/24] |> 
  _[, aice_a := aice - mean(aice), by = .(time, init_time, region)] |> 
  _[, .(sd = sd(aice_a), 
        mean = mean(aice)), by = .(init_time, region, time, lag)] |> 
  # _[month(init_time) == 1] |> 
  _[lag == 30] |> 
  ggplot(aes(month(init_time), sd)) +
  geom_point() +
  geom_violin(aes(group = month(init_time)))
```

```{r}
a[, as.numeric(init_time - min(time))/3600/24, by = .(region, init_time, member)][V1 != -1]
```

# HINDCAST

```{r read_data}

read_extent <- function(extent, area, name = "aice", range = NULL) {
  if (!is.null(range)) {
    range <- list(time = range)
  }
  extent <- ReadNetCDF(extent, vars = c(extent = name),
                       subset = range)
  
  area <- ReadNetCDF(area, vars = c(area = name),
                     subset = range)
  
  extent[area, on = .NATURAL] |>  
    _[, time := as.Date(time)] |> 
    _[, let(lat = NULL, lon = NULL)] |> 
    _[, tidyr::complete(.SD, time = seq(min(time),
                                        max(time),
                                        "1 month"))] |> 
    as.data.table() |> 
    melt(id.vars = c("time"))
}

access <- read_extent(file.path(data, "access_extent.nc"), 
                      file.path(data, "access_area.nc"))

range_access <- range(access$time)

hadisst <- read_extent(file.path(data, "hadisst_extent.nc"), 
                       file.path(data, "hadisst_area.nc"),
                       name = "sic",
                       range = range_access)


nsidc <- read_extent(file.path(data, "nsidc_extent.nc"), 
                     file.path(data, "nsidc_area.nc"),
                     name = "cdr_seaice_conc_monthly",
                     range = range_access)

```

## Antarctic Sea Ice Extent/Area

```{r}
extents <- rbind(access = access, hadisst = hadisst, nsidc = nsidc, idcol = "model") |>
  _[value == 0, value := NA] |>  # Problems with NSIDC
  _[, value := Anomaly(value, year(time) %between% c(1981, 2011), na.rm = TRUE), 
    by = .(model, variable, month(time))] |> 
  _[, model := forcats::fct_relevel(model, "access", after = Inf)]


cors <- extents |>
  _[, widyr::pairwise_cor(.SD, model, time, value, use = "complete.obs",
                          diag = FALSE, upper = FALSE), 
    by = variable] |> 
  _[, paste0("r(", item1, ", ", item2, ") = ", scales::number(correlation, accuracy = 0.01)) |> 
      paste0(collapse = "\n"), 
    by = variable] 

extents |> 
  copy() |> 
  # _[model == "hadisst", extent := extent/2] |> 
  ggplot(aes(time, value)) +
  geom_line(aes(color = model), linewidth = 0.7) +
  
  geom_smooth(aes(color = model), method = "lm",
              formula = y ~ x +
                I(pmax(x - as.numeric(as.Date("2005-12-01")), 0)) +
                I(pmax(x - as.numeric(as.Date("2012-12-01")), 0)),
              n = 100
  ) +
  
  scale_y_continuous("Extent/area (million km²)",
                     labels = scales::label_number(scale = 1e-12)) +
  scale_x_date(NULL, expand = c(0, 0)) +
  scale_color_manual(NULL, 
                     values = c(access = "black", 
                                hadisst = "#3584e4", 
                                nsidc = "#e66100"),
                     labels = c(access = "ACCESS-S2",
                                hadisst = "HadISST",
                                nsidc = "NSIDC CDRV4")) +
  geom_text(data = cors, aes(x = as.Date("1990-01-01"), y = 4*1e12, label = V1), vjust = 1) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  facet_wrap(~ variable, ncol = 1)

```

## Antarctic Sea Ice Extent/Area

```{r}
extents |> 
  dcast(time + variable ~ model, value.var = "value") |> 
  melt(id.vars= c("time", "variable", "access"), variable.name = "model") |> 
  ggplot(aes(value, access)) +
  geom_point(size = 0.4) +
  geom_smooth() +
  scale_y_continuous("Extent/area (million km²)",
                     labels = scales::label_number(scale = 1e-12)) +
  scale_x_continuous("Extent/area (million km²)",
                     labels = scales::label_number(scale = 1e-12)) +
  facet_grid(variable~model)
```



```{r}
mean_access <- access_data |> 
   cdo_ymonmean()  |> 
   cdo_remapbil(grid = "r360x180") |> 
   cdo_execute(options = "L", verbose = TRUE) 
   
ReadNetCDF(mean_access, vars = "aice", 
           subset = list(lat = c(-90, -47))) |> 
  ggplot(aes(lon, lat)) +
  geom_contour_fill(aes(z = aice)) +
  facet_wrap(~ month(time))

```

## Spatial correlation of anomalies

```{r}

correlations <- rbind(nsidc = ReadNetCDF(file.path(data, "correlation_space_nsidc.nc"), 
                                         vars = c(correlation = "cdr_seaice_conc_monthly")) |> 
                        na.omit() ,
                      hadisst = ReadNetCDF(file.path(data, "correlation_space_hadisst.nc"), 
                                           vars = c(correlation = "sic")) |> 
                        na.omit(),
                      idcol = "dataset") 

# correlations |> 
#   ggplot(aes(time, correlation)) +
#   geom_hline(yintercept = 0, linetype = 3) +
#   geom_line(aes(color = dataset), linewidth = 0.7) +
#   scale_color_manual(NULL, 
#                      values = c(access = "black", 
#                                 hadisst = "#3584e4", 
#                                 nsidc = "#e66100"),
#                      labels = c(access = "ACCESS-S2",
#                                 hadisst = "HadISST",
#                                 nsidc = "NSIDC CDRV4")) +
#   theme_minimal() +
#   scale_y_continuous("Correlation of anomalies") +
#   scale_x_datetime(NULL, expand = c(0, 0)) +
#   theme(legend.position = "bottom") 


correlations |> 
  ggplot(aes(month(time), correlation)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_violin(aes(group = month(time), color = dataset)) +
  ggforce::geom_sina(aes(group = month(time), color = dataset)) +
  scale_y_continuous("Correlation of (spatial) anomalies") +
  scale_x_continuous(NULL, breaks = 1:12, expand = c(0, 0), labels = month.abb) +
  scale_color_manual(NULL, guide = "none",
                     values = c(access = "black", 
                                hadisst = "#3584e4", 
                                nsidc = "#e66100"),
                     labels = c(access = "ACCESS-S2",
                                hadisst = "HadISST",
                                nsidc = "NSIDC CDRV4")) +
  facet_wrap(~dataset, ncol = 1, 
             labeller = labeller(dataset = c(hadisst = "HadISST",
                                             nsidc = "NSIDC CDRV4")))
```

## Time correlation of anomalies

```{r}

correlation_time <- ReadNetCDF(file.path(data, "correlation_time.nc"), 
                               vars = c(correlation = "cdr_seaice_conc_monthly",
                                        lon = "TLON",
                                        lat = "TLAT")) |> 
  
  na.omit() |> 
  _[correlation != 1]

map_antarctica <- map_data("world2") |> 
  as.data.table() |> 
  _[lat < -50] |> 
  geom_polygon(data = _, inherit.aes = FALSE, aes(long, lat, group = group), 
               colour = "black", linewidth = 0.3, fill = NA)

correlation_time |> 
  _[, month := month(time)] |> 
  ggplot(aes(lon, lat)) +
  geom_contour_fill(aes(z = correlation)) +
  scale_fill_divergent("Correlation") +
  scale_y_latitude(limits = c(-90, NA), labels = NULL) + 
  scale_x_longitude() +
  map_antarctica +
  coord_polar() + 
  facet_wrap(~ month, labeller = labeller(month = setNames(month.abb, 1:12))) 
```

## Extent vs. SST 

```{r}
sst <- rbind(file.path(data, "access_sst.nc") |> 
               ReadNetCDF(var = "sst") |> 
               _[, model := "access"] |> 
               _[, let(deptht = NULL,
                       time = as.Date(time_counter),
                       time_counter = NULL)],
             file.path(data, "era5_sst.nc") |> 
               ReadNetCDF(var = "sst") |> 
               _[, model := "era5"] |> 
               _[, time := as.Date(time)]) |> 
  _[, let(lon = NULL, lat = NULL)]



sst[, sst := Anomaly(sst, year(time) %between% c(1981, 2011)), by = .(model, month(time))]

ice_sst <- extents[model %in% c("access", "hadisst") & variable == "extent"] |> 
  dcast(time + model ~ variable, value.var = "value") |> 
  _[model != "access", model := "era5"] |> 
  _[sst, on = .NATURAL] |> 
  melt(id.vars = c("time", "model")) |> 
  _[, value := scale(value, scale = sd(value[year(time) %between% c(1981, 2011)])), by = .(model, variable)] |> 
  # _[variable == "sst", value := -value] |> 
  _[model != "access", model := "observations (ERA5 + HadISST)"]
```


```{r}
ice_sst |> 
  copy() |> 
  _[variable == "sst", value := -value] |> 
  ggplot(aes(time, value)) +
  geom_line(aes(color = variable)) +
  scale_y_continuous("Scaled value (sst reversed)") +
  scale_x_date(NULL) +
  facet_wrap(~model, ncol = 1)
```

## Extent vs. SST

```{r}
ice_sst |> 
  dcast(time + model ~ variable, value.var = "value") |> 
  # _[, month := month(time)] |> 
  ggplot(aes(extent, sst)) +
  geom_point(size = 0.5) +
  geom_smooth(method = "lm")  +
  geom_text(data = \(x) x[, cor(extent, sst, use = "complete.obs"), 
                          by = .(model)],
            aes(label = scales::number(V1, accuracy = 0.01, prefix = "r=")), 
            x = 3, y = 4) +
  facet_grid(model ~ .)
```

## Extent vs. SST

```{r}
ice_sst |> 
  dcast(time + model ~ variable, value.var = "value") |> 
  _[, with(cor.test(extent, sst, use = "complete.obs"),
           list(estimate = estimate,
                low = conf.int[1],
                high = conf.int[2])),
    by = .(month = lubridate::month(time, label = TRUE), model)] |> 
  ggplot(aes(month, estimate)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_ribbon(aes(group = model, fill = model, ymin = low, ymax = high), 
              alpha = 0.4) +
  geom_line(aes(group = model, color = model)) +
  geom_point(aes(group = model, color = model)) +
  scale_y_continuous("SST-Extent correlation") +
  scale_x_discrete(NULL)
```

## Extent vs. SST


```{r}
ice_sst |> 
  dcast(time + model ~ variable, value.var = "value") |> 
  _[order(time)] |>
  _[, cor := roll::roll_cor(extent, sst, width = 11*12) |> 
      shift(-11*12), by = .(model)] |> 
  na.omit() |> 
  ggplot(aes(time, cor)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_line(aes(color = model)) +
  scale_y_continuous("SST-Extent correlation") +
  scale_x_date(NULL, date_breaks = "5 years", date_labels = "%Y")
```


## Extent vs. SST

```{r}
ice_sst |> 
  dcast(time + model ~ variable, value.var = "value") |> 
  _[!is.na(extent), extent_sst := predict(lm(extent ~ sst)), 
    by = .(month(time), model)] |> 
  _[, residual := extent - extent_sst] |>
  _[, sst := NULL] |> 
  melt(id.vars = c("time", "model")) |> 
  ggplot(aes(time, value)) +
  geom_line(aes(color = variable)) +
  scale_y_continuous() +
  scale_x_date(NULL) +
  facet_wrap(~model, ncol = 1)
```


# Forecast

## Skill vs persistence

> The persistence skill which is calculated with the HadISST data are often used to a reference for model prediction skills. 
> The persistence correlation is the autocorrelation of the initial conditions for forecasts at different months lead and the persistence RMSE is the standard deviation of the difference between the initial condition and true future state. 
Persistence -> not the error or forecasting persistence‽ Is how well a persistencce model forecast itself. 


```{r}
read_digitised <- function(month, measure) {
  file <- file.path(data, "digitised", paste0(month, "_", measure, ".csv"))
  d <- fread(file) 
  
  colnames(d)<- c("lead", 
                  vapply(strsplit(colnames(d)[2:3], "_"), \(x) x[[3]], FUN.VALUE = character(1)))
  setcolorder(d, c("lead", "forecast", "persistence"))
  d
}


digitised <- CJ(month = c("02", "05", "08", "11"),
                measure = c("cor", "rmse")) |> 
  _[, read_digitised(month, measure), by = .(month, measure)] |> 
  _[, month := as.numeric(month)] |> 
  _[measure == "cor", measure := "correlation"]
```


```{r}
read_correlations <- function(files) {  
  dates <- utils::strcapture("di_aice_(\\d{8})_e(\\d{2})_(\\w+).nc", basename(files),
                             proto = list(time_forecast = character(),
                                          member = character(),
                                          type = character())) |> 
    as.data.table() |> 
    _[, time_forecast := as.Date(time_forecast, format = "%Y%m%d")] |> 
    _[]
  
  read <- function(i) {
    data <- try(ReadNetCDF(files[[i]], vars = c(value = "aice")), silent = TRUE)
    
    if (inherits(data, "try-error")) {
      file.remove(files[[i]])
      message("file ", basename(files[[i]]), " deleted")
      return(NULL)
    }


    data |> 
      _[, let(lat = NULL, lon = NULL)] |> 
      _[] |> 
      _[, let(time_forecast = dates$time_forecast[[i]],
              member = dates$member[[i]],
              type = dates$type[[i]],
              file = files[[i]])] |> 
      _[] 
  }
  
  lapply(seq_along(files), read) |> 
    rbindlist() 
}

geom_cross <- function() {
  list(geom_hline(yintercept = 0), 
       geom_vline(xintercept = 0))
}
```


```{r}
rmse_files <- list.files(file.path(data, "rmse"), pattern = "di_aice_",
                          full.names = TRUE)

rmse <- read_correlations(rmse_files) |> 
  _[, measure := "rmse"] |> 
  _[value < 0.01, value := NA] |>    # A few forecast have very low values
  tidyfast::dt_pivot_wider(names_from = type, values_from = value) |> 
  _[, let(skill = (forecast - persistence)/(0 - persistence))] |> 
  _[time != time[1]]
```

```{r}
skill <- rbind(cors, rmse) |> 
  _[, let(lead = months_difference(time_forecast, time),
          verification_season = season(time),
          forecast_season = season(time_forecast))] 

scale_color_forecasts <- scale_color_manual(NULL, values = c("persistence" = "black",
                                                             "forecast" = "#fc8383"),
                                            labels = c("persistence" = "Persistence",
                                                       "forecast" = "Forecast"))

scale_x_lead <- scale_x_continuous(NULL, breaks = 0:8, minor_breaks = NULL) 
```

## Comparison w/ BOM report

```{r}
digitised |> 
  melt(id.vars = c("month", "measure", "lead")) |> 
  ggplot(aes(lead, value)) +
  geom_line(aes(color = variable)) +
  geom_text(data = \(x) x[variable == "forecast"][, .SD[1], by = .(month, lead, measure)],
            aes(y = 0, label = month.abb[(month + lead - 1) %% 12 + 1]),
            size = 3, angle = 90, hjust = -0.1) +
  scale_x_lead +
  scale_y_continuous(NULL) +
  scale_color_forecasts + 
  facet_grid(month ~ measure, labeller = labeller(month = setNames(month.abb, 1:12),
                                                  measure = c(correlation = "Correlation",
                                                              rmse = "RMSE")))  +
  labs(title = "BOM") +
  
  
  rbind(cors, rmse) |> 
  _[month(time_forecast) %in% c(02, 05, 08, 11)] |>
  melt(id.vars = c("time", "time_forecast", "member", "measure"),
       measure.vars = c("forecast", "persistence")) |> 
  _[, lead := months_difference(time_forecast, time)] |> 
  # _[measure == "rmse"] |> 
  _[, month := month(time_forecast)] |> 
  
  _[lead <= 6] |>
  _[, .(value = mean(value, na.rm = TRUE)),
    by = .(lead, month(time_forecast), measure, variable)] |> 
  ggplot(aes(lead, value)) +
  geom_line(aes(color = variable)) +
  geom_text(data = \(x) x[variable == "forecast"][, .SD[1], by = .(month, lead, measure)],
            aes(y = 0, label = month.abb[(month + lead - 1) %% 12 + 1]),
            size = 3, angle = 90, hjust = -0.1) +
  scale_x_lead +
  scale_y_continuous(NULL) +
  scale_color_forecasts + 
  facet_grid(month ~ measure, scales = "free",
             labeller = labeller(month = setNames(month.abb, 1:12),
                                 measure = c(correlation = "Correlation",
                                             rmse = "RMSE")))  +
  labs(title = "Me")
```

----

```{r}
rbind(cors, rmse) |> 
  # _[month(time_forecast) %in% c(02, 05, 08, 11)] |>
  melt(id.vars = c("time", "time_forecast", "member", "measure"),
       measure.vars = c("forecast", "persistence")) |> 
  _[, lead := months_difference(time_forecast, time)] |> 
  _[measure == "correlation"] |> 
  _[, month := month(time_forecast)] |> 
  # _[lead <= 6] |>
  # _[, .(value = mean(value, na.rm = TRUE)),
  #   by = .(lead, month(time_forecast), measure, variable)] |>
  ggplot(aes(lead, value)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_boxplot(aes(color = variable, group = interaction(variable, lead))) +
  geom_text(data = \(x) x[variable == "forecast"][, .SD[1], by = .(month, lead)],
            aes(y = -0.5, label = month.abb[(month + lead - 1) %% 12 + 1]),
            size = 3, angle = 90, hjust = 0) +
  scale_color_forecasts +
  scale_x_lead +
  facet_wrap(month ~ ., labeller = labeller(month = setNames(month.abb, 1:12))) +
  labs(title = "Correlation - Higher is better")
```

----

```{r}
rbind(cors, rmse) |> 
  # _[month(time_forecast) %in% c(02, 05, 08, 11)] |>
  melt(id.vars = c("time", "time_forecast", "member", "measure"),
       measure.vars = c("forecast", "persistence")) |> 
  _[, lead := months_difference(time_forecast, time)] |> 
  _[measure == "rmse"] |> 
  _[, month := month(time_forecast)] |> 
  # _[lead <= 6] |>
  # _[, .(value = mean(value, na.rm = TRUE)),
  #   by = .(lead, month(time_forecast), measure, variable)] |>
  ggplot(aes(lead, value)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_boxplot(aes(color = variable, group = interaction(variable, lead))) +
  geom_text(data = \(x) x[variable == "forecast"][, .SD[1], by = .(month, lead)],
            aes(y = 0, label = month.abb[(month + lead - 1) %% 12 + 1]),
            size = 3, angle = 90, hjust = 0) +
  scale_color_forecasts +
  scale_x_lead +
  facet_wrap(month ~ ., labeller = labeller(month = setNames(month.abb, 1:12))) +
  labs(title = "RMSE - Lower is better")
```

## Model Skill

```{r}
skill |> 
  _[measure == "rmse"] |> 
  _[!is.na(skill)] |> 
  _[, month := month(time_forecast)] |> 
  # _[, .SD[1], by = .(month, lead)]
  ggplot(aes(lead, skill)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_boxplot(aes(group = lead)) +
  geom_text(data = \(x) x[, .SD[1], by = .(month, lead)],
            aes(y = -0.8, label = month.abb[(month + lead - 1) %% 12 + 1]),
            size = 2, angle = 90, hjust = 0) +
  scale_x_lead +
  scale_y_continuous("RMSE skill") +
  facet_wrap(month~., labeller = labeller(month = setNames(month.abb, 1:12)))
```

## Model Skill

```{r}
skill |> 
  _[measure == "correlation"] |> 
  _[!is.na(skill)] |> 
  _[, month := month(time_forecast)] |> 
  # _[, .SD[1], by = .(month, lead)]
  ggplot(aes(lead, skill)) +
  geom_hline(yintercept = 0, linetype = 3) +
  geom_boxplot(aes(group = lead)) +
  geom_text(data = \(x) x[, .SD[1], by = .(month, lead)],
            aes(y = -0.8, label = month.abb[(month + lead - 1) %% 12 + 1]),
            size = 2, angle = 90, hjust = 0) +
  scale_x_lead +
  scale_y_continuous("Correlation skill") +
  facet_wrap(month~., labeller = labeller(month = setNames(month.abb, 1:12)))
```

```{r}
knitr::knit_exit()
```


## Initial conditions vs forecast

```{r}
skill |> 
  _[measure == "rmse"] |> 
  na.omit() |> 
  ggplot(aes(initial, forecast)) +
  
  geom_point(size = 0.4) +
  geom_smooth(method = "lm", color = "#1c71d8", se = FALSE) +
  # geom_line(data = lines, li
  scale_x_continuous("Initial conditions") +
  scale_y_continuous("Forecast") +
  facet_grid(verification_season ~ lead) +
  labs(title = "RMSE", 
       subtitle = "As a function of verification season")
```


```{r}
last_plot() %+% skill[measure == "correlation"] + 
  labs(title = "Correlation") +
  geom_cross()
```

## Initial conditions vs forecast

```{r}
skill |> 
  _[measure == "rmse"] |> 
  na.omit() |> 
  ggplot(aes(initial, forecast)) +
  
  geom_point(size = 0.4) +
  geom_smooth(method = "lm", color = "#1c71d8", se = FALSE) +
  # geom_line(data = lines, linewidth = 0.9, color = "#e66100") +
  scale_x_continuous("Initial conditions") +
  scale_y_continuous("Forecast") +
  facet_grid(verification_season ~ lead) +
  labs(title = "RMSE", 
       subtitle = "As a function of verification season")


last_plot() %+% skill[measure == "correlation"] + 
  labs(title = "Correlation") +
  geom_cross()
```

```{r}
skill |> 
  _[measure == "rmse"] |> 
  na.omit() |> 
  ggplot(aes(initial, skill)) +
  geom_point(size = 0.4) +
  geom_smooth(method = "lm", color = "#1c71d8", se = FALSE) +
  # geom_line(data = lines, linewidth = 0.9, color = "#e66100") +
  scale_x_continuous("Initial conditions") +
  scale_y_continuous("Skill") +
  facet_grid(verification_season ~ lead) +
  labs(title = "RMSE skill compared with persistence", 
       subtitle = "As a function of verification season")


last_plot() %+% skill[measure == "correlation"] + 
  labs(title = "Correlation skill compared with persistence") +
  geom_cross()
```

```{r}
model <- cors[time != time_forecast] |> 
  _[initial, on = c("time_forecast", "member")] |> 
  _[, lead := months_difference(time_forecast, time)] |> 
  _[, let(fisher = atanh(correlation), 
          i.fisher = atanh(i.correlation),
          season = season(time_forecast))] |>  
  lm(fisher ~ season*i.fisher*log(lead) - 1, data = _)


lines <- CJ(i.correlation = seq(-0, 1, length.out = 20),
            lead = seq(1, 8, length.out = 8),
            # month = lubridate::month(1:12, label = TRUE, abbr = TRUE)) |> 
            season = season(c(1, 4, 6, 9))) |>
  _[, let(i.fisher = atanh(i.correlation))] |> 
  
  _[, fisher := predict(model, newdata = .SD)] |> 
  _[, correlation := tanh(fisher)] 
```

## Initial conditions vs forecast

```{r}
cor_plot +
  geom_line(data = lines, linewidth = 1, colour = "#e66100")
```

## Initial conditions vs forecast

```{r}
CJ(i.correlation = .99,
   lead = c(0, seq(1, 8, length.out = 20)),
   season = season(c(1, 4, 6, 9))) |> 
  _[, let(i.fisher = atanh(i.correlation))] |> 
  
  _[, fisher := predict(model, newdata = .SD)] |> 
  _[, correlation := tanh(fisher)] |> 
  _[lead == 0, correlation := i.correlation] |>
  ggplot(aes(lead, correlation)) +
  geom_line(data = \(x) copy(x)[lead != 0][, let(season2 = season, season = NULL)],
            aes(group = season2), color = "gray", alpha =  0.8) +
  geom_line(data = \(x) x[lead != 0]) +
  geom_point(data = \(x) x[lead == 0]) +
  facet_wrap(~season, ncol = 2) +
  scale_x_continuous("Lead time", breaks = 0:12, minor_breaks = NULL) +
  scale_y_continuous("Correlation") +
  labs(caption = "season at forecast time") 

```

## Warning: the linear model is rubbish

```{r}
predicted <- data.table(season = model$model$season,
                        residuals = tanh(model$residuals),
                        predicted = tanh(model$fitted.values))

predicted |> 
  ggplot(aes(predicted, residuals)) + 
  geom_point() +
  geom_smooth() +
  
  predicted |> 
  ggplot(aes(sample = residuals)) + 
  geom_qq() +
  geom_qq_line() &
  
  facet_wrap(~season, ncol = 4) &
  plot_layout(ncol = 1)
```
